USE merchandising;

-- 1)	Выведите ФИО всех мерчендайзеров из сибирского региона

SELECT CONCAT(lastName,' ',firstName,' ', middleName) fullName, c.name cityName
FROM merchandiser m
INNER JOIN city c
	  ON c.id = m.cityId
WHERE c.regionId = 3;

-- 2)	Выведите информацию о POSm, у которых не задан комментарий

SELECT name, format, price
FROM posmitem
WHERE comment IS NULL;

-- 3)	Для каждого города выведите название города и число мерчендайзеров из этого города.
-- Если там 0 мерчендайзеров, то должно вывестись 0

SELECT name cityName, COUNT(m.id) merchandisersCount
FROM city c
LEFT JOIN merchandiser m
	   ON c.id = m.cityId
GROUP BY name;

-- 4)	Для каждого региона выведите название региона и число мерчендайзеров из этого региона.
--  Если там 0 мерчендайзеров, то должно вывестись 0

SELECT r.name regionName, COUNT(m.id) merchandisersCount
FROM  region r
LEFT JOIN city c
	  ON c.regionId = r.id
LEFT JOIN merchandiser m
	  ON c.id = m.cityId
GROUP BY r.name
ORDER BY r.name;

-- 5)	Посчитайте сколько единиц каждого вида POSm было суммарно отправлено в пункты продаж

SELECT pi.name,
       IF(psi.posmItemsCount IS NULL, 0, psi.posmItemsCount) *
                              (SELECT SUM(posmSetsCount) setsCountSum
                               FROM placeposmtask) AS itemSumSent
FROM posmsetitem psi
RIGHT JOIN posmitem pi
	  ON pi.id = psi.posmItemId
;

-- 6)	Посчитайте сколько единиц каждого вида POsm еще осталось разместить и сколько было размещено

SELECT pi.name,
       IF(psi.posmItemsCount IS NULL, 0, psi.posmItemsCount) *
                               (SELECT SUM(posmSetsCount) setsCountSum
                                FROM placeposmtask
                                WHERE status = 1) AS itemSumNeedToPlace,
       IF(psi.posmItemsCount IS NULL, 0, psi.posmItemsCount) *
                               (SELECT SUM(posmSetsCount) setsCountSum
                                FROM placeposmtask
                                WHERE status = 2) AS itemSumPlaced
FROM posmsetitem psi
RIGHT JOIN posmitem pi
	  ON pi.id = psi.posmItemId
;

-- 7)	Посчитайте сколько единиц каждого вида POSm было отправлено каждому агенту

SELECT agentCode,
       pi.name posmName,
       IF(SUM(ppt.posmSetsCount * psi.posmItemsCount) IS NULL, 0, SUM(ppt.posmSetsCount * psi.posmItemsCount)) itemCountSentToAgent
FROM placeposmtask ppt
INNER JOIN posmsetitem psi
RIGHT JOIN posmitem pi
	    ON pi.id = psi.posmItemId
GROUP BY agentCode, pi.name
ORDER BY agentCode
;

-- 8)	Посчитайте сколько у каждого мерчендайзера задач «в работе» и «выполнено». Если 0, то должно вывестись 0

SELECT CONCAT(lastName,' ',firstName,' ', middleName) fullName,
       IF(status IS NULL,'задач нет',IF(status = 1,'в работе','выполнена')) taskStatus,
       IF(SUM(ppt.posmSetsCount) IS NULL, 0, SUM(ppt.posmSetsCount)) tasksCount
FROM placeposmtask ppt
RIGHT JOIN merchandiser m
	    ON ppt.merchandiserId = m.id
GROUP BY status, CONCAT(lastName,' ',firstName,' ', middleName)
ORDER BY lastName
;
-- 9)	Посчитайте сколько единиц каждого вида POSm было отправлено в каждый регион

SELECT r.name regionName,
       pi.name posmName,
       IF(SUM(ppt.posmSetsCount)IS NOT NULL, SUM(ppt.posmSetsCount) * psi.posmItemsCount, 0) itemCountSent
FROM placeposmtask ppt
LEFT JOIN city c
	   ON c.id = ppt.cityId
RIGHT JOIN region r
	   ON c.regionId = r.id
INNER JOIN posmsetitem psi
RIGHT JOIN posmitem pi
	   ON pi.id = psi.posmItemId
GROUP BY r.name, pi.name
ORDER BY r.name
;

-- 10)	Найдите агентов, у которых более 2 задач на размещение, выведите для каждого из них количество задач

SELECT merchandiserId, COUNT(posmSetsCount) taskCount
FROM placeposmtask
WHERE status = 1
GROUP BY merchandiserId
HAVING COUNT(posmSetsCount) > 2
;
