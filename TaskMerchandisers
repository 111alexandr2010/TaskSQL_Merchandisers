USE merchandising;

-- 1)	Выведите ФИО всех мерчендайзеров из сибирского региона

SELECT CONCAT(lastName,' ',firstName,' ', middleName) fullName, c.name cityName
FROM merchandiser m
INNER JOIN city c
	ON c.id = m.cityId
WHERE c.regionId = 3;

-- 2)	Выведите информацию о POSm, у которых не задан комментарий

SELECT name, format, price
FROM posmitem
WHERE comment IS NULL;

-- 3)	Для каждого города выведите название города и число мерчендайзеров из этого города.
-- Если там 0 мерчендайзеров, то должно вывестись 0

SELECT name cityName, COUNT(m.id) merchandisersCount
FROM city c
LEFT JOIN merchandiser m
	ON c.id = m.cityId
GROUP BY name;

-- 4)	Для каждого региона выведите название региона и число мерчендайзеров из этого региона.
--  Если там 0 мерчендайзеров, то должно вывестись 0

SELECT r.name regionName, COUNT(m.id) merchandisersCount
FROM  merchandiser m
LEFT JOIN city c
	ON c.id = m.cityId
RIGHT JOIN region r
	ON c.regionId = r.id
GROUP BY r.name;

-- 5)	Посчитайте сколько единиц каждого вида POSm было суммарно отправлено в пункты продаж

SELECT pi.name, psi.posmItemsCount * (SELECT SUM(posmSetsCount) setsCountSum
FROM placeposmtask) AS itemSumSent
FROM posmsetitem psi
INNER JOIN posmitem pi
	ON pi.id = psi.posmItemId
;

-- 6)	Посчитайте сколько единиц каждого вида POsm еще осталось разместить и сколько было размещено

SELECT pi.name, psi.posmItemsCount * (SELECT SUM(posmSetsCount) setsCountSum
FROM placeposmtask
WHERE status = 1) AS itemSumNeedToPlace,
psi.posmItemsCount * (SELECT SUM(posmSetsCount) setsCountSum
FROM placeposmtask
WHERE status = 2) AS itemSumPlaced
FROM posmsetitem psi
INNER JOIN posmitem pi
	ON pi.id = psi.posmItemId
;

-- 7)	Посчитайте сколько единиц каждого вида POSm было отправлено каждому агенту

SELECT agentCode, pi.name posmName, SUM(ppt.posmSetsCount) * psi.posmItemsCount itemCountSentToAgent
FROM placeposmtask ppt
CROSS JOIN posmsetitem psi
INNER JOIN posmitem pi
	ON pi.id = psi.posmItemId
GROUP BY agentCode, pi.name
;

-- 8)	Посчитайте сколько у каждого мерчендайзера задач «в работе» и «выполнено». Если 0, то должно вывестись 0

SELECT ppt.merchandiserId mId, CONCAT(lastName,' ',firstName,' ', middleName) fullName, SUM(ppt.posmSetsCount) tasksInProgressCount
FROM placeposmtask ppt
RIGHT JOIN merchandiser m
	ON ppt.merchandiserId = m.id
  WHERE status  = 1
GROUP BY ppt.merchandiserId, CONCAT(lastName,' ',firstName,' ', middleName)
;

SELECT ppt.merchandiserId mId, CONCAT(lastName,' ',firstName,' ', middleName) fullName, SUM(ppt.posmSetsCount) tasksDoneCount
FROM placeposmtask ppt
RIGHT JOIN merchandiser m
	ON ppt.merchandiserId = m.id
  WHERE status  = 2
GROUP BY ppt.merchandiserId, CONCAT(lastName,' ',firstName,' ', middleName)
;
-- 9)	Посчитайте сколько единиц каждого вида POSm было отправлено в каждый регион

SELECT r.name regionName, pi.name posmName,
  CASE
    WHEN SUM(ppt.posmSetsCount) IS NOT NULL THEN SUM(ppt.posmSetsCount) * psi.posmItemsCount
    ELSE 0
  END AS itemCountSentToAgent
FROM placeposmtask ppt
LEFT JOIN city c
	ON c.id = ppt.cityId
RIGHT JOIN region r
	ON c.regionId = r.id
CROSS JOIN posmsetitem psi
LEFT JOIN posmitem pi
	ON pi.id = psi.posmItemId
GROUP BY r.name, pi.name
ORDER BY r.name
;

-- 10)	Найдите агентов, у которых более 2 задач на размещение, выведите для каждого из них количество задач

SELECT agentCode, SUM(posmSetsCount) taskCountCommon
FROM placeposmtask
GROUP BY agentCode
HAVING SUM(posmSetsCount) > 2
;