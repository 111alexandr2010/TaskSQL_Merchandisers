USE merchandising;

-- 1)	Выведите ФИО всех мерчендайзеров из сибирского региона

SELECT CONCAT(lastName,' ',firstName,' ', middleName) fullName, c.name cityName
FROM merchandiser m
INNER JOIN city c
	    ON c.id = m.cityId
WHERE c.regionId = 3;

-- 2)	Выведите информацию о POSm, у которых не задан комментарий

SELECT name, format, price
FROM posmitem
WHERE comment IS NULL;

-- 3)	Для каждого города выведите название города и число мерчендайзеров из этого города.
-- Если там 0 мерчендайзеров, то должно вывестись 0

SELECT name cityName, COUNT(m.id) merchandisersCount
FROM city c
LEFT JOIN merchandiser m
	   ON c.id = m.cityId
GROUP BY name;

-- 4)	Для каждого региона выведите название региона и число мерчендайзеров из этого региона.
--  Если там 0 мерчендайзеров, то должно вывестись 0

SELECT r.name regionName, COUNT(m.id) merchandisersCount
FROM  region r
LEFT JOIN city c
	   ON c.regionId = r.id
LEFT JOIN merchandiser m
	   ON c.id = m.cityId
GROUP BY r.name
ORDER BY r.name;

-- 5)	Посчитайте сколько единиц каждого вида POSm было суммарно отправлено в пункты продаж

SELECT pi.name posmName,
       IFNULL(SUM(ppt.posmSetsCount * psi.posmItemsCount), 0) itemSumSent
FROM placeposmtask ppt
INNER JOIN formposmsettask f
	  ON f.id = ppt.formPosmSetTaskId
INNER JOIN posmset ps
	ON ps.id = f.posmSetId
INNER JOIN posmsetitem psi
	ON psi.posmSetId = ps.id
RIGHT JOIN posmitem pi
	  ON pi.id = psi.posmItemId
GROUP BY pi.name;

-- 6)	Посчитайте сколько единиц каждого вида POsm еще осталось разместить и сколько было размещено

USE  merchandising;

SELECT  pi.name, IFNULL(ppt.status,'не имеет статуса') TaskStatus, 
        IFNULL(SUM(ppt.posmSetsCount * psi.posmItemsCount), 0) SumItems
FROM placeposmtask ppt
INNER JOIN formposmsettask f
	ON f.id = ppt.formPosmSetTaskId
INNER JOIN posmset ps	
	ON ps.id = f.posmSetId
INNER JOIN posmsetitem 
	ON psi.posmSetId = ps.id
RIGHT JOIN posmitem pi	 
        ON pi.id = psi.posmItemId
GROUP BY pi.name, ppt.status ;

-- 7)	Посчитайте сколько единиц каждого вида POSm было отправлено каждому агенту

SELECT agentCode,
       pi.name posmName,
       IFNULL(SUM(ppt.posmSetsCount * psi.posmItemsCount), 0) itemCountSentToAgent
FROM placeposmtask ppt
INNER JOIN formposmsettask f
	  ON f.id = ppt.formPosmSetTaskId
INNER JOIN posmset ps
	ON ps.id = f.posmSetId
INNER JOIN posmsetitem psi
	ON psi.posmSetId = ps.id
RIGHT JOIN posmitem pi
	  ON pi.id = psi.posmItemId
GROUP BY agentCode, pi.name
ORDER BY agentCode;

-- 8)	Посчитайте сколько у каждого мерчендайзера задач «в работе» и «выполнено». Если 0, то должно вывестись 0

SELECT m.id, CONCAT(lastName,' ', firstName,' ', middleName) fullName,
       IFNULL(IF(status = 1,'в работе','выполнена'), 'задач нет') taskStatus,
       IFNULL(SUM(ppt.posmSetsCount), 0) tasksCount
FROM placeposmtask ppt
RIGHT JOIN merchandiser m
	    ON ppt.merchandiserId = m.id
GROUP BY status, m.id, CONCAT(lastName,' ', firstName,' ', middleName)
ORDER BY m.id
;
-- 9)	Посчитайте сколько единиц каждого вида POSm было отправлено в каждый регион

SELECT r.name regionName,
       pi.name posmName,
       IFNULL(SUM(ppt.posmSetsCount * psi.posmItemsCount), 0) itemCountSent
FROM region r
LEFT JOIN city c
	   ON c.regionId = r.id
LEFT JOIN placeposmtask ppt
	   ON c.id = ppt.cityId
LEFT JOIN formposmsettask f
	   ON f.id = ppt.formPosmSetTaskId
LEFT JOIN posmset ps
	   ON ps.id = f.posmSetId
LEFT JOIN posmsetitem psi
	   ON psi.posmSetId = ps.id
INNER JOIN posmitem pi
	   ON pi.id = psi.posmItemId
GROUP BY r.name, pi.name
ORDER BY r.name;

-- 10)	Найдите агентов, у которых более 2 задач на размещение, выведите для каждого из них количество задач

SELECT agentCode, COUNT(posmSetsCount) taskCount
FROM placeposmtask
GROUP BY agentCode
HAVING COUNT(posmSetsCount) > 2
;
